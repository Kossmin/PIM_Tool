@model SPK_PIM.Models.IndexPageModel
@using BusinessObject;

@{
    ViewBag.Title = "Create";
    var actionName = "";
    var selectedEmp = (IEnumerable<int>)ViewData["SelectedEmployee"];
}
@Html.Hidden("returnUrl", ViewBag.ReturnUrl as string)

@if (ViewBag.Details != null)
{
    <h2>Details</h2>
    actionName = "Edit";
}
else
{
    <h2>Create</h2>
    actionName = "Create";
}

@if (ViewBag.Concurrent != null)
{
    <p class="text-danger">The version of this product is old</p>
}


<hr>


@using (Html.BeginForm(actionName, "Project"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" hidden>
            <div class="col-md-9">
                <input class="form-control input text-box single-line" data-val="true" name="_Project.ID" style="width: 200px" type="number" value=@Model._Project.ID>
                <input class="form-control input text-box single-line" data-val="true" name="_Project.Version" style="width: 200px" type="number" value=@Model._Project.Version>
                @Html.ValidationMessageFor(model => model._Project.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._Project.ProjectNumber, htmlAttributes: new { @class = "control-label col-md-2 aligned-label" })
            <div class="col-md-4">
                @if (ViewBag.Details != null)
                {
                    <input disabled class="form-control input text-box single-line" data-val="true" name="_Project.ProjectNumber" type="text" value=@Model._Project.ProjectNumber>
                    <input type="hidden" class="form-control input text-box single-line" data-val="true" name="_Project.ProjectNumber" type="text" value=@Model._Project.ProjectNumber>
                }
                else
                {
                    @Html.EditorFor(model => model._Project.ProjectNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @*<input id="_Project.ProjectNumber" class="form-control input text-box single-line" data-val="true" name="_Project.ProjectNumber" type="text" value=@Model._Project.ProjectNumber>*@
                    <span id="validation"></span>
                }
                @Html.ValidationMessageFor(model => model._Project.ProjectNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._Project.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                <input required class="form-control input text-box single-line" style="max-width: 100%" data-val="true" name="_Project.ProjectName" type="text" value=@Model._Project.ProjectName>
                @Html.ValidationMessageFor(model => model._Project.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._Project.Customer, htmlAttributes: new { @class = "control-label col-md-2 aligned-label" })
            <div class="col-md-9">
                <input required class="form-control input text-box single-line" style="max-width: 100%" data-val="true" name="_Project.Customer" type="text" value=@Model._Project.Customer>
                @*@Html.EditorFor(model => model._Project.Customer, new { htmlAttributes = new { @class = "form-control", style = "width: 500px" } })*@
                @Html.ValidationMessageFor(model => model._Project.Customer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._Project.Status, htmlAttributes: new { @class = "control-label col-md-2 aligned-label" })
            <div class="col-md-4">
                <select class="dropdown form-control" name="_Project.Status">
                    <option value="0" id="NEW">NEW</option>
                    <option value="1" id="PLA">PLA</option>
                    <option value="2" id="INP">INP</option>
                    <option value="3" id="FIN">FIN</option>
                </select>
                @Html.ValidationMessageFor(model => model._Project.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 aligned-label">Member</label>
            <div class="col-md-9">
                @*<input class="form-control input text-box single-line" style="max-width: 100%" data-val="true" name="_Project.Member" type="text" value="">*@
                @*@Html.EditorFor(model => model._Project.Customer, new { htmlAttributes = new { @class = "form-control", style = "width: 500px" } })*@
                @*@Html.ValidationMessageFor(model => model._Project.Customer, "", new { @class = "text-danger" })*@

                <select required class="js-example-basic-multiple" style="max-width: 100%" name="projectEmployees" multiple="multiple">
                    @foreach (var item in Model.Members)
                    {
                        <option value="@item.ID" id=@item.ID>@item.Visa : @item.FirstName @item.LastName</option>
                    }
                </select>
            </div>
        </div>

        @{
            var dateFormat = "";
            HttpCookie cookie = Request.Cookies["_culture"];
            var cookieValue = "vi";
            var language = Request.UserLanguages;
            if (cookie != null)
            {
                cookieValue = cookie.Value;
            }
            else
            {
                cookieValue = language[0];
            }
            if (cookieValue == "en")
            {
                dateFormat = "MM-dd-yyyy";
            }
            else
            {
                dateFormat = "dd-MM-yyyy";
            }
            var startDate = Model._Project.StartDate.ToString(dateFormat);
            var endDate = Model._Project.EndDate.ToString(dateFormat);
        }

        <div class="col-sm-6 form-group">
            <label class="control-label col-md-4 aligned-label">@Resources.Resources.StartDate</label>
            <div class="col-md-8">
                @if (ViewBag.Details != null)
                {
                    @Html.EditorFor(m => m._Project.StartDate, new { @Value = Model._Project.StartDate.ToString(dateFormat), htmlAttributes = new {@class = "form-control" }, @required = "required" })
                    @*<input class="form-control input text-box" data-val="true" name="_Project.StartDate" type="date" value=@startDate>*@
                    @*<input required class="input text-box form-control" data-val="true" name="_Project.StartDate" type="date" value=@Model._Project.StartDate.ToString(dateFormat)>*@
                }
                else
                {
                    @*@Html.EditorFor(m => m._Project.StartDate, new { @Value = DateTime.UtcNow, @class = "form-control " })*@
                    <input required class="input text-box form-control" data-val="true" name="_Project.StartDate" type="date" value="">
                }

                @Html.ValidationMessageFor(model => model._Project.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-sm-6 form-group">
            <label class="control-label col-md-4 aligned-label">@Resources.Resources.EndDate</label>
            <div class="col-md-8">
                @if (ViewBag.Details != null)
                {
                    @Html.EditorFor(m => m._Project.EndDate, new { @Value = Model._Project.EndDate.ToString(dateFormat), @class = "form-control", @required = "required" })
                    @*<input class="form-control input text-box" data-val="true" name="_Project.EndDate" type="date" value=@endDate>*@
                    <input required class="input text-box form-control" data-val="true" name="_Project.EndDate" type="date" value=@Model._Project.EndDate.ToString(dateFormat)>
                }
                else
                {
                    @*@Html.EditorFor(m => m._Project.StartDate, new { @Value = "0", @class = "form-control " })*@
                    <input required class="input text-box form-control" data-val="true" name="_Project.EndDate" type="date" value="">
                }
                @Html.ValidationMessageFor(model => model._Project.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (ViewBag.Details != null)
                {
                    <input type="submit" id="submitButton" value="Save Changes" class="btn btn-default" />
                }
                else
                {
                    <input type="submit" value="Create" class="btn btn-default" />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Cancel", "BackToHome", new { returnUrl = ViewBag.ReturnUrl as string })
            </div>
        </div>
    </div>
}
@section Scripts{
    <script>
        $(document).ready(function () {
            const value = '@Model._Project.Status';

            $('#' + value).attr("selected", "selected");
            var tmp = JSON.parse('@Html.Raw(Json.Encode(selectedEmp))');
            for (const item of tmp) {
                $('#' + item).attr("selected", "selected");
            }
            $('.js-example-basic-multiple').select2({ width: '100%' });
        })
    </script>

    <script>
        $(document).ready(
            $('#_Project.ProjectNumber').blur(function () {
                const projectNumber = document.getElementById("_Project.ProjectNumber").value;
                const url = "https://localhost:44321/Validation/Is_Valid?projectNumber=" + projectNumber;
                const submit = document.getElementById("submitButton");
                $.get(url, function (data) {
                    const validationtext = document.getElementById("validation");
                    if (data == "true") {
                        submit.disabled = false;
                    }
                    else {
                        submit.disabled = true;
                        validationtext.innerHTML = "Your project number is duplicated";
                    }
                });
            }
            )
        )
    </script>

    <script>
        $(document).ready(function () {
            $('.js-example-basic-multiple').select2({ width: '100%' });
        });
    </script>
}